//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Gbmono.CrawlerDB
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class NCrawlerEntitiesDbServices : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new NCrawlerEntitiesDbServices object using the connection string found in the 'NCrawlerEntitiesDbServices' section of the application configuration file.
        /// </summary>
        public NCrawlerEntitiesDbServices() : base("name=NCrawlerEntitiesDbServices", "NCrawlerEntitiesDbServices")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NCrawlerEntitiesDbServices object.
        /// </summary>
        public NCrawlerEntitiesDbServices(string connectionString) : base(connectionString, "NCrawlerEntitiesDbServices")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NCrawlerEntitiesDbServices object.
        /// </summary>
        public NCrawlerEntitiesDbServices(EntityConnection connection) : base(connection, "NCrawlerEntitiesDbServices")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CrawlHistory> CrawlHistory
        {
            get
            {
                if ((_CrawlHistory == null))
                {
                    _CrawlHistory = base.CreateObjectSet<CrawlHistory>("CrawlHistory");
                }
                return _CrawlHistory;
            }
        }
        private ObjectSet<CrawlHistory> _CrawlHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CrawlQueue> CrawlQueue
        {
            get
            {
                if ((_CrawlQueue == null))
                {
                    _CrawlQueue = base.CreateObjectSet<CrawlQueue>("CrawlQueue");
                }
                return _CrawlQueue;
            }
        }
        private ObjectSet<CrawlQueue> _CrawlQueue;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CrawlDateTime> CrawlDateTimes
        {
            get
            {
                if ((_CrawlDateTimes == null))
                {
                    _CrawlDateTimes = base.CreateObjectSet<CrawlDateTime>("CrawlDateTimes");
                }
                return _CrawlDateTimes;
            }
        }
        private ObjectSet<CrawlDateTime> _CrawlDateTimes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CrawlHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCrawlHistory(CrawlHistory crawlHistory)
        {
            base.AddObject("CrawlHistory", crawlHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CrawlQueue EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCrawlQueue(CrawlQueue crawlQueue)
        {
            base.AddObject("CrawlQueue", crawlQueue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CrawlDateTimes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCrawlDateTimes(CrawlDateTime crawlDateTime)
        {
            base.AddObject("CrawlDateTimes", crawlDateTime);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NCrawlerModel", Name="CrawlDateTime")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CrawlDateTime : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CrawlDateTime object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="crawlHistoryId">Initial value of the CrawlHistoryId property.</param>
        public static CrawlDateTime CreateCrawlDateTime(global::System.Int32 id, global::System.Int32 crawlHistoryId)
        {
            CrawlDateTime crawlDateTime = new CrawlDateTime();
            crawlDateTime.Id = id;
            crawlDateTime.CrawlHistoryId = crawlHistoryId;
            return crawlDateTime;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CrawlHistoryId
        {
            get
            {
                return _CrawlHistoryId;
            }
            set
            {
                OnCrawlHistoryIdChanging(value);
                ReportPropertyChanging("CrawlHistoryId");
                _CrawlHistoryId = StructuralObject.SetValidValue(value, "CrawlHistoryId");
                ReportPropertyChanged("CrawlHistoryId");
                OnCrawlHistoryIdChanged();
            }
        }
        private global::System.Int32 _CrawlHistoryId;
        partial void OnCrawlHistoryIdChanging(global::System.Int32 value);
        partial void OnCrawlHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDateTime
        {
            get
            {
                return _CreateDateTime;
            }
            set
            {
                OnCreateDateTimeChanging(value);
                ReportPropertyChanging("CreateDateTime");
                _CreateDateTime = StructuralObject.SetValidValue(value, "CreateDateTime");
                ReportPropertyChanged("CreateDateTime");
                OnCreateDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDateTime;
        partial void OnCreateDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateTimeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NCrawlerModel", Name="CrawlHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CrawlHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CrawlHistory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        public static CrawlHistory CreateCrawlHistory(global::System.Int32 id, global::System.String key, global::System.Int32 groupId)
        {
            CrawlHistory crawlHistory = new CrawlHistory();
            crawlHistory.Id = id;
            crawlHistory.Key = key;
            crawlHistory.GroupId = groupId;
            return crawlHistory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false, "Key");
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value, "GroupId");
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NCrawlerModel", Name="CrawlQueue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CrawlQueue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CrawlQueue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        public static CrawlQueue CreateCrawlQueue(global::System.Int32 id, global::System.Int32 groupId, global::System.String key)
        {
            CrawlQueue crawlQueue = new CrawlQueue();
            crawlQueue.Id = id;
            crawlQueue.GroupId = groupId;
            crawlQueue.Key = key;
            return crawlQueue;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value, "GroupId");
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] SerializedData
        {
            get
            {
                return StructuralObject.GetValidValue(_SerializedData);
            }
            set
            {
                OnSerializedDataChanging(value);
                ReportPropertyChanging("SerializedData");
                _SerializedData = StructuralObject.SetValidValue(value, true, "SerializedData");
                ReportPropertyChanged("SerializedData");
                OnSerializedDataChanged();
            }
        }
        private global::System.Byte[] _SerializedData;
        partial void OnSerializedDataChanging(global::System.Byte[] value);
        partial void OnSerializedDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false, "Key");
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Exclusion
        {
            get
            {
                return _Exclusion;
            }
            set
            {
                OnExclusionChanging(value);
                ReportPropertyChanging("Exclusion");
                _Exclusion = StructuralObject.SetValidValue(value, "Exclusion");
                ReportPropertyChanged("Exclusion");
                OnExclusionChanged();
            }
        }
        private global::System.Boolean _Exclusion = false;
        partial void OnExclusionChanging(global::System.Boolean value);
        partial void OnExclusionChanged();

        #endregion

    }

    #endregion

}
